name: Deploy Webserver
run-name: Deploying Sharebin Webserver... ðŸš€

permissions:
   contents: read

on:
   workflow_dispatch:

jobs:
   build:
      name: Trigger deploy & verify health
      runs-on: ubuntu-latest
      env:
         SERVER_BASE_URL: ${{ vars.SHAREBIN_SERVER_URL }}
      steps:
         - name: Checkout repository
           uses: actions/checkout@v4

         - name: Trigger Dagu DAG (rebuild sharebin)
           run: |
              set -e
              echo "Triggering Dagu DAG rebuild-sharebin-app ..."
              RESPONSE=$(curl -sS -w "\n%{http_code}" -X POST '${{ vars.DEPLOY_WEBHOOK_URL }}' \
                 --header 'Accept: application/json' \
                 --header 'Authorization: Basic ${{ secrets.DAGU_AUTH_TOKEN }}' \
                 --header 'Content-Type: application/json' \
                 --data '{}')

              HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
              BODY=$(echo "$RESPONSE" | sed '$d')

              echo "HTTP code: $HTTP_CODE"
              echo "Raw body: $BODY"

              if [ "$HTTP_CODE" -ge 400 ]; then
                 echo "Dagu trigger failed (HTTP $HTTP_CODE)" >&2
                 exit 1
              fi

              if command -v jq >/dev/null 2>&1; then
                 DAG_RUN_ID=$(echo "$BODY" | jq -r '.dagRunId // empty')
              else
                 DAG_RUN_ID=$(echo "$BODY" | sed -n 's/.*"dagRunId"[[:space:]]*:[[:space:]]*"\([^"]\+\)".*/\1/p')
              fi

              if [ -z "$DAG_RUN_ID" ]; then
                 echo "Failed to extract dagRunId from response." >&2
                 exit 1
              fi

              echo "DAG triggered successfully: dagRunId=$DAG_RUN_ID"
              echo "DAG Run: $DAG_RUN_ID" >> $GITHUB_STEP_SUMMARY

         - name: Wait for deployment (initial grace)
           run: sleep 10

         - name: Health check (GET /api/v1/health)
           run: |
              if [ -z "${SERVER_BASE_URL}" ]; then
                 echo "SERVER_BASE_URL is not set (configure vars.SHAREBIN_SERVER_URL)." >&2
                 exit 1
              fi
              chmod +x .github/scripts/health_check.sh
              ATTEMPTS=12 SLEEP_SECONDS=5 EXPECT_STATUS=ok \
                 ./.github/scripts/health_check.sh "${SERVER_BASE_URL}" "/api/v1/health"
